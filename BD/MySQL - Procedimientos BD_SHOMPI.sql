-- PROCEDIMIENTOS ALMACENADOS --

-- Usamos la bd -- 
USE BD_SHOPMI;

-- --------------------------- --
-- -------- CATEGORIA -------- --
-- --------------------------- --

/* GET */
DELIMITER $$

DROP PROCEDURE IF EXISTS USP_GET_CATEGORIA
$$
CREATE PROCEDURE USP_GET_CATEGORIA()
BEGIN
	SELECT 
		CODCATEGORIA,
		IMGCATEGORIA,
		NOMCATEGORIA,
		ESTCATEGORIA
	FROM CATEGORIA;
END
$$


/* GET ID */
DROP PROCEDURE IF EXISTS USP_GET_ID_CATEGORIA
$$
CREATE PROCEDURE USP_GET_ID_CATEGORIA(IN C_CODCATEGORIA INT)
BEGIN
	SELECT * FROM CATEGORIA WHERE CODCATEGORIA = C_CODCATEGORIA;
END
$$

/* POST / PUT */
DROP PROCEDURE IF EXISTS USP_MERGE_CATEGORIA
$$
CREATE PROCEDURE USP_MERGE_CATEGORIA(
	IN C_CODCATEGORIA INT,
	IN C_IMGCATEGORIA VARCHAR(50),
	IN C_NOMCATEGORIA VARCHAR(50),
	IN C_ESTCATEGORIA BIT
)
BEGIN
	IF EXISTS (SELECT 1 FROM CATEGORIA WHERE CODCATEGORIA = C_CODCATEGORIA) THEN
		UPDATE CATEGORIA 
		SET IMGCATEGORIA   = C_IMGCATEGORIA,
			NOMCATEGORIA   = C_NOMCATEGORIA,
			ESTCATEGORIA   = C_ESTCATEGORIA
		WHERE CODCATEGORIA = C_CODCATEGORIA;
	ELSE
		INSERT INTO CATEGORIA (IMGCATEGORIA, NOMCATEGORIA, ESTCATEGORIA)
		VALUES (C_IMGCATEGORIA, C_NOMCATEGORIA, C_ESTCATEGORIA);
	END IF;
END
$$

/* DELETE */
DROP PROCEDURE IF EXISTS USP_DELETE_CATEGORIA
$$
CREATE PROCEDURE USP_DELETE_CATEGORIA(IN C_CODCATEGORIA INT)
BEGIN
	UPDATE CATEGORIA SET ESTCATEGORIA = 0 WHERE CODCATEGORIA = C_CODCATEGORIA;
END
$$

/* ENABLE */
DROP PROCEDURE IF EXISTS USP_ENABLE_CATEGORIA
$$
CREATE PROCEDURE USP_ENABLE_CATEGORIA(IN C_CODCATEGORIA INT)
BEGIN
	UPDATE CATEGORIA SET ESTCATEGORIA = 1 WHERE CODCATEGORIA = C_CODCATEGORIA;
END
$$

DELIMITER ;
-- --------------------------- --
-- ---------- MARCA ---------- --
-- --------------------------- --

/* GET */
DELIMITER $$
DROP PROCEDURE IF EXISTS USP_GET_MARCA
$$
CREATE PROCEDURE USP_GET_MARCA()
BEGIN
	SELECT
	MA.CODMARCA,
	MA.NOMBREMARCA,
	MA.ESTMARCA
	FROM MARCA AS MA;
END
$$

CALL USP_GET_MARCA();

/* GET ID */
DROP PROCEDURE IF EXISTS USP_GET_ID_MARCA
$$
CREATE PROCEDURE USP_GET_ID_MARCA(IN M_CODMARCA INT)
BEGIN
	SELECT * FROM MARCA WHERE CODMARCA = M_CODMARCA;
END
$$

CALL USP_GET_ID_MARCA(3);

/* POST/PUT */
DROP PROCEDURE IF EXISTS USP_MERGE_MARCA
$$
CREATE PROCEDURE USP_MERGE_MARCA(
	IN M_CODMARCA INT,
	IN M_NOMBREMARCA VARCHAR(25),
	IN M_ESTMARCA BIT
    )
BEGIN
	IF EXISTS (SELECT 1 FROM MARCA WHERE CODMARCA = M_CODMARCA ) THEN
		UPDATE MARCA
        SET NOMBREMARCA = M_NOMBREMARCA,
			ESTMARCA = M_ESTMARCA
		WHERE CODMARCA = M_CODMARCA;
	ELSE
		INSERT INTO MARCA (NOMBREMARCA, ESTMARCA)
		VALUES(M_NOMBREMARCA, M_ESTMARCA);
    END IF;
END
$$

CALL USP_MERGE_MARCA(6,'Lenovo', 1);

/* DELETE */
DROP PROCEDURE IF EXISTS USP_DELETE_MARCA
$$
CREATE PROCEDURE USP_DELETE_MARCA(IN M_CODMARCA INT)
BEGIN
	UPDATE MARCA SET ESTMARCA = 0 WHERE CODMARCA = M_CODMARCA;
END
$$

CALL USP_DELETE_MARCA(11);


/* ENABLE */
DROP PROCEDURE IF EXISTS USP_ENABLE_MARCA
$$
CREATE PROCEDURE USP_ENABLE_MARCA(IN M_CODMARCA INT)
BEGIN
	UPDATE MARCA SET ESTMARCA = 1 WHERE CODMARCA = M_CODMARCA;
END
$$

CALL USP_ENABLE_MARCA(11);

DELIMITER ;
-- --------------------------- --
-- --------- DISTRITO -------- --
-- --------------------------- --

/* GET */
DELIMITER $$
DROP PROCEDURE IF EXISTS USP_GET_DISTRITO
$$
CREATE PROCEDURE USP_GET_DISTRITO()
BEGIN
	SELECT
	DI.CODDISTRITO,
	DI.NOMBREDISTRITO,
	DI.CODPOSTAL,
	DI.ESTDISTRITO
	FROM DISTRITO AS DI;
END
$$

-- --------------------------- --
-- --------- CLIENTE --------- --
-- --------------------------- --

/* GET */
DROP PROCEDURE IF EXISTS USP_GET_CLIENTE
$$
CREATE PROCEDURE USP_GET_CLIENTE()
BEGIN
	SELECT 
	CL.CODCLIENTE,
	CL.NUMEROCOMDOCUMENTO,
	CL.APELLIDOS,
	CL.NOMBRES,
	D.NOMBREDISTRITO,
	CL.DIRECCION,
	CL.FECNAC,
	CL.SEXO,
	CL.ESTCLIENTE
	FROM CLIENTE AS CL
	INNER JOIN DISTRITO D ON CL.CODDISTRITO = D.CODDISTRITO;
END
$$

EXECUTE USP_GET_CLIENTE;

/* GET ID */
DROP PROCEDURE IF EXISTS USP_GET_ID_CLIENTE
$$
CREATE PROCEDURE USP_GET_ID_CLIENTE(IN CL_CODCLIENTE INT)
BEGIN
	SELECT 
	CL.CODCLIENTE,
	CL.NUMEROCOMDOCUMENTO,
	CL.APELLIDOS,
	CL.NOMBRES,
	D.NOMBREDISTRITO,
	CL.DIRECCION,
	CL.FECNAC,
	CL.SEXO,
	CL.ESTCLIENTE
	FROM CLIENTE AS CL
	INNER JOIN DISTRITO D ON CL.CODDISTRITO = D.CODDISTRITO
	WHERE CODCLIENTE = CL_CODCLIENTE;
END
$$

/* POST / PUT */
DROP PROCEDURE IF EXISTS USP_GET_MERGE_CLIENTE
$$
CREATE PROCEDURE USP_GET_MERGE_CLIENTE(
		IN CODCLIENTE  INT,
		IN NUMEROCOMDOCUMENTO VARCHAR(50),
		IN APELLIDOS VARCHAR(50),
		IN NOMBRES VARCHAR(50),
		IN CODDISTRITO INT,
		IN DIRECCION VARCHAR(150), 
		IN FECNAC DATE,
		IN SEXO CHAR(1),
		IN CORREO VARCHAR(50),
		IN TELEFONO CHAR(9),
		IN ESTCLIENTE BIT
	)
	BEGIN
		IF EXISTS (SELECT 1 FROM CLIENTE WHERE CODCLIENTE = CL_CODCLIENTE) THEN
		UPDATE CLIENTE
			SET NUMEROCOMDOCUMENTO = CL_NUMEROCOMDOCUMENTO,
				APELLIDOS = CL_APELLIDOS,
				NOMBRES = CL_NOMBRES,
				CODDISTRITO = CL_CODDISTRITO,
				DIRECCION = CL_DIRECCION,
				FECNAC = CL_FECNAC,
				SEXO = CL_SEXO,
				CORREO = CL_CORREO,
				TELEFONO = CL_TELEFONO,
				ESTCLIENTE = CL_ESTCLIENTE
			WHERE CODCLIENTE = CL_CODCLIENTE;
		ELSE 
			INSERT INTO CLIENTE (NUMEROCOMDOCUMENTO, APELLIDOS, NOMBRES,
		CODDISTRITO, DIRECCION, FECNAC, SEXO, CORREO, TELEFONO, ESTCLIENTE)
			VALUES(CL_NUMEROCOMDOCUMENTO, CL_APELLIDOS, CL_NOMBRES,
		CL_CODDISTRITO, CL_DIRECCION, CL_FECNAC, CL_SEXO, CL_CORREO, CL_TELEFONO, CL_ESTCLIENTE);
	END IF;
END
$$

/* DELETE */
DROP PROCEDURE IF EXISTS USP_DELETE_CLIENTE
$$
CREATE PROCEDURE USP_DELETE_CLIENTE(IN CL_CODCLIENTE INT)
BEGIN
	UPDATE CLIENTE SET ESTCLIENTE = 0 WHERE CODCLIENTE = CL_CODCLIENTE;
END
$$

/* ENABLE */
DROP PROCEDURE IF EXISTS USP_ENABLE_CLIENTE
$$
CREATE PROCEDURE USP_ENABLE_CLIENTE(IN CL_CODCLIENTE INT)
BEGIN
	UPDATE CLIENTE SET ESTCLIENTE = 1 WHERE CODCLIENTE = CL_CODCLIENTE;
END
$$

DELIMITER ;
-- --------------------------- --
-- --------- EMPLEADO -------- --
-- --------------------------- --

/* GET */
DELIMITER $$
DROP PROCEDURE IF EXISTS USP_GET_EMPLEADO
$$
CREATE PROCEDURE USP_GET_EMPLEADO()
BEGIN
	SELECT 
	EM.CODEMPLEADO,
	EM.NUMERODOCUMENTO,
	EM.APELLIDOS,
	EM.NOMBRES,
	D.NOMBREDISTRITO,
	EM.DIRECCION,
	EM.FECNAC,
	EM.SEXO,
	EM.CORREO,
	EM.ESTEMPLEADO
	FROM EMPLEADO AS EM
	INNER JOIN DISTRITO D ON EM.CODDISTRITO = D.CODDISTRITO;
END
$$

/* GET ID */
DROP PROCEDURE IF EXISTS USP_GET_ID_EMPLEADO
$$
CREATE PROCEDURE USP_GET_ID_EMPLEADO(IN E_CODEMPLEADO INT)
BEGIN
	SELECT 
	EM.CODEMPLEADO,
	EM.NUMERODOCUMENTO,
	EM.APELLIDOS,
	EM.NOMBRES,
	D.NOMBREDISTRITO,
	EM.DIRECCION,
	EM.FECNAC,
	EM.SEXO,
	EM.CORREO,
	EM.ESTEMPLEADO
	FROM EMPLEADO AS EM
	INNER JOIN DISTRITO D ON EM.CODDISTRITO = D.CODDISTRITO
	WHERE CODEMPLEADO = E_CODEMPLEADO;
END
$$

/* POST / PUT */
DROP PROCEDURE IF EXISTS USP_MERGE_EMPLEADO
$$
CREATE PROCEDURE  USP_MERGE_EMPLEADO(
		IN E_CODEMPLEADO INT,
		IN E_CODDOCUMENTO INT,
		IN E_NUMERODOCUMENTO VARCHAR(50),
		IN E_APELLIDOS VARCHAR(50),
		IN E_NOMBRES VARCHAR(50),
		IN E_CODDISTRITO INT,
		IN E_DIRECCION VARCHAR(150), 
		IN E_FECNAC DATE,
		IN E_SEXO CHAR(1),
		IN E_CORREO VARCHAR(50),
		IN E_ESTEMPLEADO BIT
	)
	BEGIN
		IF EXISTS(SELECT 1 FROM EMPLEADO WHERE CODEMPLEADO = E_CODEMPLEADO) THEN
			UPDATE EMPLEADO
            SET NUMERODOCUMENTO = E_NUMERODOCUMENTO,
				APELLIDOS = E_APELLIDOS,
				NOMBRES = E_NOMBRES,
				CODDISTRITO = E_CODDISTRITO,
				DIRECCION = E_DIRECCION,
				FECNAC = E_FECNAC,
				SEXO = E_SEXO,
				CORREO = E_CORREO,
				ESTEMPLEADO = E_ESTEMPLEADO
			WHERE CODEMPLEADO = E_CODEMPLEADO;
		ELSE
			INSERT INTO EMPLEADO (NUMERODOCUMENTO, APELLIDOS, NOMBRES,
		CODDISTRITO, DIRECCION, FECNAC, SEXO, CORREO, ESTEMPLEADO)
			VALUES(E_NUMERODOCUMENTO, E_APELLIDOS, E_NOMBRES,
		E_CODDISTRITO, E_DIRECCION, E_FECNAC, E_SEXO, E_CORREO, E_ESTEMPLEADO);
	END IF;
END
$$

/* DELETE */
DROP PROCEDURE IF EXISTS USP_DELETE_EMPLEADO
$$
CREATE PROCEDURE USP_DELETE_EMPLEADO(IN E_CODEMPLEADO INT)
BEGIN
	UPDATE EMPLEADO SET ESTEMPLEADO = 0 WHERE CODEMPLEADO = E_CODEMPLEADO;
END
$$

/* ENABLE */
DROP PROCEDURE IF EXISTS USP_ENABLE_EMPLEADO
$$
CREATE PROCEDURE USP_ENABLE_EMPLEADO(IN E_CODEMPLEADO INT)
BEGIN
	UPDATE EMPLEADO SET ESTEMPLEADO = 1 WHERE CODEMPLEADO = E_CODEMPLEADO;
END
$$

DELIMITER ;
-- --------------------------- --
-- --------- USUARIO --------- --
-- --------------------------- --

/* GET */
DELIMITER $$
DROP PROCEDURE IF EXISTS USP_GET_USUARIO
$$
CREATE PROCEDURE USP_GET_USUARIO()
BEGIN
	SELECT
	U.CODUSUARIO,
	U.APEUSUARIO,
	U.NOMUSUARIO,
	U.CORUSUARIO,
	U.FECCRE,
	U.ESTUSUARIO,
	EM.NOMBRES,
	R.NOMBREROL
	FROM USUARIO AS U
	INNER JOIN EMPLEADO EM ON U.CODEMPLEADO = EM.CODEMPLEADO
	INNER JOIN ROL R ON U.CODROL = R.CODROL;
END
$$

/* GET ID */
DROP PROCEDURE IF EXISTS USP_GET_ID_USUARIO
$$
CREATE PROCEDURE USP_GET_ID_USUARIO(IN U_CODUSUARIO INT)
BEGIN
	SELECT
	U.CODUSUARIO,
	U.APEUSUARIO,
	U.NOMUSUARIO,
	U.CORUSUARIO,
	U.FECCRE,
	U.ESTUSUARIO,
	EM.NOMBRES,
	R.NOMBREROL
	FROM USUARIO AS U
	INNER JOIN EMPLEADO EM ON U.CODEMPLEADO = EM.CODEMPLEADO
	INNER JOIN ROL R ON U.CODROL = R.CODROL
	WHERE CODUSUARIO = U_CODUSUARIO;
END
$$

/* POST / PUT */

DROP PROCEDURE IF EXISTS USP_MERGE_USUARIO
$$
CREATE PROCEDURE USP_MERGE_USUARIO (
		IN U_CODUSUARIO INT,
		IN U_APEUSUARIO VARCHAR(50),
		IN U_NOMUSUARIO VARCHAR(50),
		IN U_CORUSUARIO VARCHAR(100),
		IN U_CONUSUARIO VARCHAR(50),
		IN U_FECCRE DATETIME,
		IN U_ESTUSUARIO BIT,
		IN U_CODEMPLEADO INT,
		IN U_CODROL INT
	)
	BEGIN
		IF EXISTS(SELECT 1 FROM USUARIO WHERE CODUSUARIO = U_CODUSUARIO) THEN
			UPDATE USUARIO
            SET APEUSUARIO   = U_APEUSUARIO,
				NOMUSUARIO   = U_NOMUSUARIO,
				CORUSUARIO   = U_CORUSUARIO,
				CONUSUARIO   = U_CONUSUARIO,
				FECCRE       = U_FECCRE,
				ESTUSUARIO   = U_ESTUSUARIO,
				CODEMPLEADO  = U_CODEMPLEADO,
				CODROL       = U_CODROL
			WHERE CODUSUARIO = U_CODUSUARIO;
		ELSE
			INSERT INTO USUARIO(APEUSUARIO, NOMUSUARIO, CORUSUARIO, CONUSUARIO,
		FECCRE, ESTUSUARIO, CODEMPLEADO, CODROL)
			VALUES(U_APEUSUARIO, U_NOMUSUARIO, U_CORUSUARIO, U_CONUSUARIO,
		U_FECCRE, U_ESTUSUARIO, U_CODEMPLEADO, U_CODROL);
	END IF;
END
$$

/*  DELETE */
DROP PROCEDURE IF EXISTS USP_DELETE_USUARIO
$$
CREATE PROCEDURE USP_DELETE_USUARIO(IN U_CODUSUARIO INT)
BEGIN
	UPDATE USUARIO SET ESTUSUARIO = 0 WHERE CODUSUARIO = U_CODUSUARIO;
END
$$

/* ENABLE */
DROP PROCEDURE IF EXISTS USP_ENABLE_USUARIO
$$
CREATE PROCEDURE USP_ENABLE_USUARIO(IN U_CODUSUARIO INT)
BEGIN
	UPDATE USUARIO SET ESTUSUARIO = 1 WHERE CODUSUARIO = U_CODUSUARIO;
END
$$

DELIMITER ;
-- --------------------------- --
-- --------- PEDIDO ---------- --
-- --------------------------- --

/* GET */
DELIMITER $$
DROP PROCEDURE IF EXISTS USP_GET_PEDIDO
$$
CREATE PROCEDURE USP_GET_PEDIDO()
BEGIN
	SELECT
	P.CODPEDIDO,
	CL.NOMBRES,
	EM.NOMBRES,
	P.FECPED,
	P.PRECIOTOTAL,
	P.ACTPED,
	P.ESTPED
	FROM PEDIDO AS P
	INNER JOIN CLIENTE CL ON P.CODCLIENTE = CL.CODCLIENTE
	INNER JOIN EMPLEADO EM ON P.CODEMPLEADO = EM.CODEMPLEADO;
END
$$


/* GET ID */
DROP PROCEDURE IF EXISTS USP_GET_ID_PEDIDO
$$
CREATE PROCEDURE USP_GET_ID_PEDIDO(IN CODPEDIDO INT)
BEGIN
	SELECT
	P.CODPEDIDO,
	CL.NOMBRES,
	EM.NOMBRES,
	P.FECPED,
	P.PRECIOTOTAL,
	P.ACTPED,
	P.ESTPED
	FROM PEDIDO AS P
	INNER JOIN CLIENTE CL ON P.CODCLIENTE = CL.CODCLIENTE
	INNER JOIN EMPLEADO EM ON P.CODEMPLEADO = EM.CODEMPLEADO
	WHERE CODPEDIDO = CODPEDIDO;
END
$$

/* POST / PUT */
DROP PROCEDURE IF EXISTS USP_MERGE_PEDIDO
$$
CREATE PROCEDURE USP_MERGE_PEDIDO(
		IN P_CODPEDIDO INT,
		IN P_CODCLIENTE INT,
		IN P_CODEMPLEADO INT,
		IN P_FECPED DATE,
		IN P_PRECIOTOTAL DECIMAL,
		IN P_ACTPED VARCHAR(20),
		IN P_ESTPED BIT
    )
	BEGIN
		IF EXISTS(SELECT 1 FROM PEDIDO WHERE CODPEDIDO = P_CODPEDIDO) THEN
			UPDATE PEDIDO
            SET CODCLIENTE  = P_CODCLIENTE,
				CODEMPLEADO = P_CODEMPLEADO,
				FECPED      = P_FECPED,
				PRECIOTOTAL = P_PRECIOTOTAL,
				ACTPED      = P_ACTPED,
				ESTPED      = P_ESTPED
			WHERE CODPEDIDO = P_CODPEDIDO;
		ELSE
			INSERT INTO PEDIDO(CODCLIENTE, CODEMPLEADO, FECPED,
		PRECIOTOTAL, ACTPED, ESTPED)
			VALUES(P_CODCLIENTE, P_CODEMPLEADO, P_FECPED, 
		P_PRECIOTOTAL, P_ACTPED, P_ESTPED);
	END IF;
END
$$

/* DELETE */
DROP PROCEDURE IF EXISTS SUSP_DELETE_PEDIDO
$$
CREATE PROCEDURE USP_DELETE_PEDIDO(IN P_CODPEDIO INT)
BEGIN
	UPDATE PEDIDO SET ESTPED = 0 WHERE CODPEDIDO = P_CODPEDIDO;
END
$$

/* ENABLE */
DROP PROCEDURE IF EXISTS USP_ENABLE_PEDIDO
$$
CREATE PROCEDURE USP_ENABLE_PEDIDO(IN P_CODPEDIO INT)
BEGIN
	UPDATE PEDIDO SET ESTPED = 1 WHERE CODPEDIDO = P_CODPEDIDO;
END
$$

DELIMITER ;
-- ----------------------------------- --
-- --------- DETALLE PEDIDO ---------- --
-- ----------------------------------- --

/* GET */
DELIMITER $$
DROP PROCEDURE IF EXISTS USP_GET_DETALLEPEDIDO
$$
CREATE PROCEDURE USP_GET_DETALLEPEDIDO()
BEGIN	
	SELECT
	P.ACTPED,
	PR.NOMPRODUCTO,
	DT.PREUNI,
	DT.CANTIDAD,
	DT.EST_PP
	FROM DETALLEPEDIDO AS DT
	INNER JOIN PEDIDO P ON DT.CODPEDIDO = P.CODPEDIDO
	INNER JOIN PRODUCTO PR ON DT.CODPRODUCTO = PR.CODPRODUCTO;
END
$$

/* GET ID */
DROP PROCEDURE IF EXISTS USP_GET_ID_DETALLEPEDIDO
$$
CREATE PROCEDURE USP_GET_ID_DETALLEPEDIDO(IN DT_CODPEDIDO INT, IN DT_CODPRODUCTO INT)
BEGIN
	SELECT
	P.ACTPED,
	PR.NOMPRODUCTO,
	DT.PREUNI,
	DT.CANTIDAD,
	DT.EST_PP
	FROM DETALLEPEDIDO AS DT
	INNER JOIN PEDIDO P ON DT.CODPEDIDO = P.CODPEDIDO
	INNER JOIN PRODUCTO PR ON DT.CODPRODUCTO = PR.CODPRODUCTO
	WHERE DT.CODPEDIDO = DT_CODPEDIDO AND DT.CODPRODUCTO = DT_CODPRODUCTO;
END
$$

/* POST / PUT */
DROP PROCEDURE IF EXISTS USP_MERGE_DETALLEPEDIDO
$$
CREATE PROCEDURE USP_MERGE_DETALLEPEDIDO(
		IN DT_CODPEDIDO INT,
		IN DT_CODPRODUCTO INT,
		IN DT_PREUNI DECIMAL(10, 2),
		IN DT_CANTIDAD INT,
		IN DT_EST_PP BIT
    )
	BEGIN
		IF EXISTS(SELECT 1 FROM DETALLEPEDIDO WHERE CODPEDIDO = DT_CODPEDIDO AND CODPRODUCTO = DT_CODPRODUCTO) THEN
			UPDATE DETALLEPEDIDO
            SET PREUNI   = DT_PREUNI,
				CANTIDAD = DT_CANTIDAD,
				EST_PP   = DT_EST_PP
			WHERE CODPEDIDO = DT_CODPEDIDO AND CODPRODUCTO = DT_CODPRODUCTO;
		ELSE
			INSERT INTO DETALLEPEDIDO(CODPRODUCTO, PREUNI, CANTIDAD, EST_PP)
			VALUES (DT_CODPRODUCTO, DT_PREUNI, DT_CANTIDAD, DT_EST_PP);
	END IF;
END
$$

/* DELETE */
DROP PROCEDURE IF EXISTS USP_DELETE_DETALLEPEDIDO
$$
CREATE PROCEDURE USP_DELETE_DETALLEPEDIDO(IN DT_CODPEDIDO INT, IN DT_CODPRODUCTO INT)
BEGIN
	UPDATE DETALLEPEDIDO SET EST_PP = 0 WHERE CODPEDIDO = DT_CODPEDIDO AND CODPRODUCTO = DT_CODPRODUCTO;
END
$$


/* ENABLE */
DROP PROCEDURE IF EXISTS USP_ENABLE_DETALLEPEDIDO
$$
CREATE PROCEDURE USP_ENABLE_DETALLEPEDIDO(IN DT_CODPEDIDO INT, IN DT_CODPRODUCTO INT)
BEGIN
	UPDATE DETALLEPEDIDO SET EST_PP = 1 WHERE CODPEDIDO = DT_CODPEDIDO AND CODPRODUCTO = DT_CODPRODUCTO;
END
$$

DELIMITER ;
